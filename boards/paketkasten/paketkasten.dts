/*
 * Copyright (c) 2025 Conny Marco Menebr√∂cker
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/l1/stm32l100Xb.dtsi>
#include <st/l1/stm32l100r(8-b)tx-pinctrl.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	model = "Paketkasten Schlosselektronik";
	compatible = "dhl,paketkasten";

	chosen {
		zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
	};

	leds: leds {
		compatible = "gpio-leds";
		green_led_0: led_0 {
			gpios = <&gpioc 2 GPIO_ACTIVE_HIGH>;
		};
		red_led_1: led_1 {
			gpios = <&gpioc 1 GPIO_ACTIVE_HIGH>;
		};
		vdd_en: output {
			gpios = <&gpioa 8 GPIO_ACTIVE_HIGH>;
			label = "Enable VDD to power up peripherals";
		};
	};

	pwmleds: pwmleds {
		compatible = "pwm-leds";
		status = "okay";

		motor_vor: motor_vor {
			pwms = <&pwm4 1 PWM_USEC(100) PWM_POLARITY_NORMAL>;
		};

		motor_zur: motor_zur {
			pwms = <&pwm4 2 PWM_USEC(100) PWM_POLARITY_NORMAL>;
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
		hall_zu: button0 {
			label = "Hall_zu";
			gpios = <&gpioc 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_0>;
		};

		hall_p_auf: button1 {
			label = "Hall_Paket_auf";
			gpios = <&gpioc 5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_1>;
		};

		hall_b_auf: button2 {
			label = "Hall_Brief_auf";
			gpios = <&gpioc 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_2>;
		};

		paket_auf: button3 {
			label = "Paketkasten_auf";
			gpios = <&gpioa 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_3>;
		};

		brief_auf: button4 {
			label = "Briefkasten_auf";
			gpios = <&gpioa 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_4>;
		};

		jumper: button5 {
			label = "Jumper";
			gpios = <&gpiob 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
			zephyr,code = <INPUT_KEY_5>;
		};
	};

	aliases {
		vdden = &vdd_en;
		ledgreen = &green_led_0;
		ledred = &red_led_1;
		motorv = &motor_vor;
		motorz = &motor_zur;
		hallzu = &hall_zu;
		hallpauf = &hall_p_auf;
		hallbauf = &hall_b_auf;
		paketauf = &paket_auf;
		briefauf = &brief_auf;
		jumper = &jumper;
		rfid = &cr95hf;
		/* eeprom-0 = &eeprom;
		watchdog0 = &iwdg;
		die-temp0 = &die_temp;
		volt-sensor0 = &vref; */
	};

	zephyr,user {
        io-channels = <&adc1 1>;
    };

};

&clk_hse {
	clock-frequency = <DT_FREQ_M(8)>;
	status = "okay";
};

&clk_hsi {
	status = "okay";
};

&clk_lse {
	status = "okay";
};

&pll {
	div = <2>;
	mul = <3>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(12)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
};

/* &eeprom {
	status = "okay";
}; */

/*&iwdg {
	status = "okay";
};*/

&rtc {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x10000000>,
		 <&rcc STM32_SRC_LSE RTC_SEL(1)>;
	status = "okay";
};


/* &die_temp {
	status = "okay";
}; */

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

	};
};

&dma1 {
	status = "okay";
};

/* &vref {
	status = "okay";
}; */

&usart1 {
	dmas = <&dma1 4 (STM32_DMA_PERIPH_TX | STM32_DMA_PRIORITY_HIGH)>,
           <&dma1 5 (STM32_DMA_PERIPH_RX | STM32_DMA_PRIORITY_HIGH)>;
    dma-names = "tx", "rx";
	pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
	pinctrl-names = "default";
	current-speed = <9600>;
	status = "okay";
};

&timers4 {
	status = "okay";

	pwm4: pwm {
		pinctrl-0 = <&tim4_ch1_pb6 &tim4_ch2_pb7>;
		pinctrl-names = "default";
		status = "okay";
	};
};

&adc1 {
	status = "okay";
    pinctrl-0 = <&adc_in1_pa1>;
    pinctrl-names = "default";
	st,adc-prescaler = <4>;

	#address-cells = <1>;
	#size-cells = <0>;

	channel@1 {
		reg = <1>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

	dmas = <&dma1 1 (STM32_DMA_PERIPH_RX | STM32_DMA_PERIPH_16BITS | STM32_DMA_MEM_16BITS | STM32_DMA_PRIORITY_HIGH)>;
    dma-names = "adc";
};

&spi1 {
	pinctrl-0 = <&spi1_sck_pa5 &spi1_miso_pa6 &spi1_mosi_pa7>;
	pinctrl-names = "default";
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	cs-gpios = <&gpioa 4 GPIO_ACTIVE_LOW>;

	cr95hf: spi-device@0 {
		reg = <0>;
		spi-max-frequency = <50000>;
		compatible = "st,cr95hf";
		status = "okay";
		irq-in-gpios = <&gpioa 2 GPIO_ACTIVE_LOW>;
		irq-out-gpios = <&gpioa 3 GPIO_ACTIVE_LOW>;
	};

	dmas = <&dma1 3 (STM32_DMA_PERIPH_TX | STM32_DMA_PRIORITY_HIGH)>,
		   <&dma1 2 (STM32_DMA_PERIPH_RX | STM32_DMA_PRIORITY_HIGH)>;
	dma-names = "tx", "rx";
};

&spi2 {
	pinctrl-0 = <&spi2_sck_pb13 &spi2_miso_pb14 &spi2_mosi_pb15>;
	pinctrl-names = "default";
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	cs-gpios = <&gpiob 12 GPIO_ACTIVE_LOW>, <&gpioc 8 GPIO_ACTIVE_LOW>;

	eeprom0: eeprom@0 {
		reg = <0>;
		spi-max-frequency = <1000000>;
		compatible = "atmel,at25";
		status = "okay";
		size = <32768>;
		pagesize = <64>;
		address-width = <16>;
		timeout = <5>;
	};

	eeprom1: eeprom@1 {
		reg = <1>;
		spi-max-frequency = <1000000>;
		compatible = "atmel,at25";
		status = "okay";
		size = <32768>;
		pagesize = <64>;
		address-width = <16>;
		timeout = <5>;
	};
};